name: docker

on:
  pull_request: {}
  push:
    branches:
      - main
  schedule:
    - cron: "0 0 * * 0" # every Sunday
  workflow_dispatch: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: write

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set expires-after label
        id: labels
        run: |
          if ${{ github.event_name == 'pull_request' }}; then
            QUAY_EXPIRES_AFTER=quay.expires-after=30d
          fi
          echo "::set-output name=expires-after::$QUAY_EXPIRES_AFTER"

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ghcr.io/${{ github.repository }}
            quay.io/bitski/rust-sdk
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=branch
            type=ref,event=pr
            type=schedule
            type=semver,pattern={{major}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{version}}
            type=sha
          labels: |
            ${{ steps.labels.outputs.expires-after }}

      - name: Expose GitHub Actions vars
        uses: actions/github-script@v6
        with:
          script: |
            Object.keys(process.env)
              .filter(RegExp.prototype.test.bind(/^ACTIONS_/))
              .forEach((name) => {
                const value = process.env[name];
                if (!value) return;
                core.info(`${name}=${value}`);
                core.exportVariable(name, value);
            });

      - name: Log in to ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Log in to quay.io
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_IO_USER }}
          password: ${{ secrets.QUAY_IO_PASS }}

      - name: Build Docker image
        uses: docker/bake-action@v2.2.0
        with:
          files: |
            ./docker-bake.hcl
            ${{ steps.meta.outputs.bake-file }}
          push: true
          set: |
            *.args.ACTIONS_CACHE_URL=${{ env.ACTIONS_CACHE_URL }}
            *.args.ACTIONS_RUNTIME_TOKEN=${{ env.ACTIONS_RUNTIME_TOKEN }}
